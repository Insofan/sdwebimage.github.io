{"Functions.html#/c:@F@SDCGColorSpaceGetDeviceRGB":{"name":"SDCGColorSpaceGetDeviceRGB","abstract":"<p>Return the shared device-dependent RGB color space created with CGColorSpaceCreateDeviceRGB.</p>"},"Functions.html#/c:@F@SDCGImageRefContainsAlpha":{"name":"SDCGImageRefContainsAlpha","abstract":"<p>Check whether CGImageRef contains alpha channel.</p>"},"Functions.html#/c:@F@SDScaledImageForKey":{"name":"SDScaledImageForKey","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDImageCache.h@T@SDCacheQueryCompletedBlock":{"name":"SDCacheQueryCompletedBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDImageCache.h@T@SDWebImageCheckCacheCompletionBlock":{"name":"SDWebImageCheckCacheCompletionBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDImageCache.h@T@SDWebImageCalculateSizeBlock":{"name":"SDWebImageCalculateSizeBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageCompat.h@T@SDWebImageNoParamsBlock":{"name":"SDWebImageNoParamsBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageDownloader.h@T@SDWebImageDownloaderProgressBlock":{"name":"SDWebImageDownloaderProgressBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageDownloader.h@T@SDWebImageDownloaderCompletedBlock":{"name":"SDWebImageDownloaderCompletedBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageDownloader.h@T@SDHTTPHeadersDictionary":{"name":"SDHTTPHeadersDictionary","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageDownloader.h@T@SDHTTPHeadersMutableDictionary":{"name":"SDHTTPHeadersMutableDictionary","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageDownloader.h@T@SDWebImageDownloaderHeadersFilterBlock":{"name":"SDWebImageDownloaderHeadersFilterBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageManager.h@T@SDExternalCompletionBlock":{"name":"SDExternalCompletionBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageManager.h@T@SDInternalCompletionBlock":{"name":"SDInternalCompletionBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageManager.h@T@SDWebImageCacheKeyFilterBlock":{"name":"SDWebImageCacheKeyFilterBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageManager.h@T@SDWebImageCacheSerializerBlock":{"name":"SDWebImageCacheSerializerBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImagePrefetcher.h@T@SDWebImagePrefetcherProgressBlock":{"name":"SDWebImagePrefetcherProgressBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImagePrefetcher.h@T@SDWebImagePrefetcherCompletionBlock":{"name":"SDWebImagePrefetcherCompletionBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageTransition.h@T@SDWebImageTransitionPreparesBlock":{"name":"SDWebImageTransitionPreparesBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageTransition.h@T@SDWebImageTransitionAnimationsBlock":{"name":"SDWebImageTransitionAnimationsBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:SDWebImageTransition.h@T@SDWebImageTransitionCompletionBlock":{"name":"SDWebImageTransitionCompletionBlock","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:UIView+WebCache.h@T@SDSetImageBlock":{"name":"SDSetImageBlock","abstract":"<p>Undocumented</p>"},"Protocols/SDWebImagePrefetcherDelegate.html#/c:objc(pl)SDWebImagePrefetcherDelegate(im)imagePrefetcher:didPrefetchURL:finishedCount:totalCount:":{"name":"-imagePrefetcher:didPrefetchURL:finishedCount:totalCount:","abstract":"<p>Called when an image was prefetched.</p>","parent_name":"SDWebImagePrefetcherDelegate"},"Protocols/SDWebImagePrefetcherDelegate.html#/c:objc(pl)SDWebImagePrefetcherDelegate(im)imagePrefetcher:didFinishWithTotalCount:skippedCount:":{"name":"-imagePrefetcher:didFinishWithTotalCount:skippedCount:","abstract":"<p>Called when all images are prefetched.</p>","parent_name":"SDWebImagePrefetcherDelegate"},"Protocols/SDWebImageOperation.html#/c:objc(pl)SDWebImageOperation(im)cancel":{"name":"-cancel","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageOperation"},"Protocols/SDWebImageManagerDelegate.html#/c:objc(pl)SDWebImageManagerDelegate(im)imageManager:shouldDownloadImageForURL:":{"name":"-imageManager:shouldDownloadImageForURL:","abstract":"<p>Controls which image should be downloaded when the image is not found in the cache.</p>","parent_name":"SDWebImageManagerDelegate"},"Protocols/SDWebImageManagerDelegate.html#/c:objc(pl)SDWebImageManagerDelegate(im)imageManager:shouldBlockFailedURL:withError:":{"name":"-imageManager:shouldBlockFailedURL:withError:","parent_name":"SDWebImageManagerDelegate"},"Protocols/SDWebImageManagerDelegate.html#/c:objc(pl)SDWebImageManagerDelegate(im)imageManager:transformDownloadedImage:withURL:":{"name":"-imageManager:transformDownloadedImage:withURL:","abstract":"<p>Allows to transform the image immediately after it has been downloaded and just before to cache it on disk and memory.","parent_name":"SDWebImageManagerDelegate"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)initWithRequest:inSession:options:":{"name":"-initWithRequest:inSession:options:","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)addHandlersForProgress:completed:":{"name":"-addHandlersForProgress:completed:","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)shouldDecompressImages":{"name":"-shouldDecompressImages","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)setShouldDecompressImages:":{"name":"-setShouldDecompressImages:","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)credential":{"name":"-credential","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)setCredential:":{"name":"-setCredential:","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageDownloaderOperationInterface.html#/c:objc(pl)SDWebImageDownloaderOperationInterface(im)cancel:":{"name":"-cancel:","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperationInterface"},"Protocols/SDWebImageProgressiveCoder.html#/c:objc(pl)SDWebImageProgressiveCoder(im)canIncrementallyDecodeFromData:":{"name":"-canIncrementallyDecodeFromData:","abstract":"<p>Returns YES if this coder can incremental decode some data. Otherwise, it should be passed to another coder.</p>","parent_name":"SDWebImageProgressiveCoder"},"Protocols/SDWebImageProgressiveCoder.html#/c:objc(pl)SDWebImageProgressiveCoder(im)incrementallyDecodedImageWithData:finished:":{"name":"-incrementallyDecodedImageWithData:finished:","abstract":"<p>Incremental decode the image data to image.</p>","parent_name":"SDWebImageProgressiveCoder"},"Protocols/SDWebImageCoder.html#/c:objc(pl)SDWebImageCoder(im)canDecodeFromData:":{"name":"-canDecodeFromData:","abstract":"<p>Returns YES if this coder can decode some data. Otherwise, the data should be passed to another coder.</p>","parent_name":"SDWebImageCoder"},"Protocols/SDWebImageCoder.html#/c:objc(pl)SDWebImageCoder(im)decodedImageWithData:":{"name":"-decodedImageWithData:","abstract":"<p>Decode the image data to image.</p>","parent_name":"SDWebImageCoder"},"Protocols/SDWebImageCoder.html#/c:objc(pl)SDWebImageCoder(im)decompressedImageWithImage:data:options:":{"name":"-decompressedImageWithImage:data:options:","abstract":"<p>Decompress the image with original image and image data.</p>","parent_name":"SDWebImageCoder"},"Protocols/SDWebImageCoder.html#/c:objc(pl)SDWebImageCoder(im)canEncodeToFormat:":{"name":"-canEncodeToFormat:","abstract":"<p>Returns YES if this coder can encode some image. Otherwise, it should be passed to another coder.</p>","parent_name":"SDWebImageCoder"},"Protocols/SDWebImageCoder.html#/c:objc(pl)SDWebImageCoder(im)encodedDataWithImage:format:":{"name":"-encodedDataWithImage:format:","abstract":"<p>Encode the image to image data.</p>","parent_name":"SDWebImageCoder"},"Protocols/SDWebImageCoder.html":{"name":"SDWebImageCoder","abstract":"<p>This is the image coder protocol to provide custom image decoding/encoding."},"Protocols/SDWebImageProgressiveCoder.html":{"name":"SDWebImageProgressiveCoder","abstract":"<p>This is the image coder protocol to provide custom progressive image decoding."},"Protocols/SDWebImageDownloaderOperationInterface.html":{"name":"SDWebImageDownloaderOperationInterface","abstract":"<p>Describes a downloader operation. If one wants to use a custom downloader op, it needs to inherit from <code>NSOperation</code> and conform to this protocol"},"Protocols/SDWebImageManagerDelegate.html":{"name":"SDWebImageManagerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/SDWebImageOperation.html":{"name":"SDWebImageOperation","abstract":"<p>Undocumented</p>"},"Protocols/SDWebImagePrefetcherDelegate.html":{"name":"SDWebImagePrefetcherDelegate","abstract":"<p>Undocumented</p>"},"Enums/SDWebImageAnimationOptions.html#/c:@E@SDWebImageAnimationOptions@SDWebImageAnimationOptionAllowsImplicitAnimation":{"name":"SDWebImageAnimationOptionAllowsImplicitAnimation","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageAnimationOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageRetryFailed":{"name":"SDWebImageRetryFailed","abstract":"<p>By default, when a URL fail to be downloaded, the URL is blacklisted so the library won&rsquo;t keep trying.","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageLowPriority":{"name":"SDWebImageLowPriority","abstract":"<p>By default, image downloads are started during UI interactions, this flags disable this feature,","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageCacheMemoryOnly":{"name":"SDWebImageCacheMemoryOnly","abstract":"<p>This flag disables on-disk caching after the download finished, only cache in memory</p>","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageProgressiveDownload":{"name":"SDWebImageProgressiveDownload","abstract":"<p>This flag enables progressive download, the image is displayed progressively during download as a browser would do.","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageRefreshCached":{"name":"SDWebImageRefreshCached","abstract":"<p>Even if the image is cached, respect the HTTP response cache control, and refresh the image from remote location if needed.","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageContinueInBackground":{"name":"SDWebImageContinueInBackground","abstract":"<p>In iOS 4+, continue the download of the image if the app goes to background. This is achieved by asking the system for","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageHandleCookies":{"name":"SDWebImageHandleCookies","abstract":"<p>Handles cookies stored in NSHTTPCookieStore by setting","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageAllowInvalidSSLCertificates":{"name":"SDWebImageAllowInvalidSSLCertificates","abstract":"<p>Enable to allow untrusted SSL certificates.","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageHighPriority":{"name":"SDWebImageHighPriority","abstract":"<p>By default, images are loaded in the order in which they were queued. This flag moves them to","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageDelayPlaceholder":{"name":"SDWebImageDelayPlaceholder","abstract":"<p>By default, placeholder images are loaded while the image is loading. This flag will delay the loading","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageTransformAnimatedImage":{"name":"SDWebImageTransformAnimatedImage","abstract":"<p>We usually don&rsquo;t call transformDownloadedImage delegate method on animated images,","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageAvoidAutoSetImage":{"name":"SDWebImageAvoidAutoSetImage","abstract":"<p>By default, image is added to the imageView after download. But in some cases, we want to","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageScaleDownLargeImages":{"name":"SDWebImageScaleDownLargeImages","abstract":"<p>By default, images are decoded respecting their original size. On iOS, this flag will scale down the","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageQueryDataWhenInMemory":{"name":"SDWebImageQueryDataWhenInMemory","abstract":"<p>By default, we do not query disk data when the image is cached in memory. This mask can force to query disk data at the same time.","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageQueryDiskSync":{"name":"SDWebImageQueryDiskSync","abstract":"<p>By default, we query the memory cache synchronously, disk cache asynchronously. This mask can force to query disk cache synchronously to ensure that image is loaded in the same runloop.","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageFromCacheOnly":{"name":"SDWebImageFromCacheOnly","abstract":"<p>By default, when the cache missed, the image is download from the network. This flag can prevent network to load from cache only.</p>","parent_name":"SDWebImageOptions"},"Enums/SDWebImageOptions.html#/c:@E@SDWebImageOptions@SDWebImageForceTransition":{"name":"SDWebImageForceTransition","abstract":"<p>By default, when you use <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SDWebImageTransition.html\">SDWebImageTransition</a></code> to do some view transition after the image load finished, this transition is only applied for image download from the network. This mask can force to apply view transition for memory and disk cache as well.</p>","parent_name":"SDWebImageOptions"},"Enums/SDWebImageDownloaderExecutionOrder.html#/c:@E@SDWebImageDownloaderExecutionOrder@SDWebImageDownloaderFIFOExecutionOrder":{"name":"SDWebImageDownloaderFIFOExecutionOrder","abstract":"<p>Default value. All download operations will execute in queue style (first-in-first-out).</p>","parent_name":"SDWebImageDownloaderExecutionOrder"},"Enums/SDWebImageDownloaderExecutionOrder.html#/c:@E@SDWebImageDownloaderExecutionOrder@SDWebImageDownloaderLIFOExecutionOrder":{"name":"SDWebImageDownloaderLIFOExecutionOrder","abstract":"<p>All download operations will execute in stack style (last-in-first-out).</p>","parent_name":"SDWebImageDownloaderExecutionOrder"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderLowPriority":{"name":"SDWebImageDownloaderLowPriority","abstract":"<p>Put the download in the low queue priority and task priority.</p>","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderProgressiveDownload":{"name":"SDWebImageDownloaderProgressiveDownload","abstract":"<p>This flag enables progressive download, the image is displayed progressively during download as a browser would do.</p>","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderUseNSURLCache":{"name":"SDWebImageDownloaderUseNSURLCache","abstract":"<p>By default, request prevent the use of NSURLCache. With this flag, NSURLCache","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderIgnoreCachedResponse":{"name":"SDWebImageDownloaderIgnoreCachedResponse","abstract":"<p>Call completion block with nil image/imageData if the image was read from NSURLCache","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderContinueInBackground":{"name":"SDWebImageDownloaderContinueInBackground","abstract":"<p>In iOS 4+, continue the download of the image if the app goes to background. This is achieved by asking the system for","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderHandleCookies":{"name":"SDWebImageDownloaderHandleCookies","abstract":"<p>Handles cookies stored in NSHTTPCookieStore by setting","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderAllowInvalidSSLCertificates":{"name":"SDWebImageDownloaderAllowInvalidSSLCertificates","abstract":"<p>Enable to allow untrusted SSL certificates.","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderHighPriority":{"name":"SDWebImageDownloaderHighPriority","abstract":"<p>Put the download in the high queue priority and task priority.</p>","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDWebImageDownloaderOptions.html#/c:@E@SDWebImageDownloaderOptions@SDWebImageDownloaderScaleDownLargeImages":{"name":"SDWebImageDownloaderScaleDownLargeImages","abstract":"<p>Scale down the image</p>","parent_name":"SDWebImageDownloaderOptions"},"Enums/SDImageCacheConfigExpireType.html#/c:@E@SDImageCacheConfigExpireType@SDImageCacheConfigExpireTypeAccessDate":{"name":"SDImageCacheConfigExpireTypeAccessDate","abstract":"<p>When the image is accessed it will update this value</p>","parent_name":"SDImageCacheConfigExpireType"},"Enums/SDImageCacheConfigExpireType.html#/c:@E@SDImageCacheConfigExpireType@SDImageCacheConfigExpireTypeModificationDate":{"name":"SDImageCacheConfigExpireTypeModificationDate","abstract":"<p>The image was obtained from the disk cache (Default)</p>","parent_name":"SDImageCacheConfigExpireType"},"Enums/SDImageCacheOptions.html#/c:@E@SDImageCacheOptions@SDImageCacheQueryDataWhenInMemory":{"name":"SDImageCacheQueryDataWhenInMemory","abstract":"<p>By default, we do not query disk data when the image is cached in memory. This mask can force to query disk data at the same time.</p>","parent_name":"SDImageCacheOptions"},"Enums/SDImageCacheOptions.html#/c:@E@SDImageCacheOptions@SDImageCacheQueryDiskSync":{"name":"SDImageCacheQueryDiskSync","abstract":"<p>By default, we query the memory cache synchronously, disk cache asynchronously. This mask can force to query disk cache synchronously.</p>","parent_name":"SDImageCacheOptions"},"Enums/SDImageCacheOptions.html#/c:@E@SDImageCacheOptions@SDImageCacheScaleDownLargeImages":{"name":"SDImageCacheScaleDownLargeImages","abstract":"<p>By default, images are decoded respecting their original size. On iOS, this flag will scale down the","parent_name":"SDImageCacheOptions"},"Enums/SDImageCacheType.html#/c:@E@SDImageCacheType@SDImageCacheTypeNone":{"name":"SDImageCacheTypeNone","abstract":"<p>The image wasn&rsquo;t available the SDWebImage caches, but was downloaded from the web.</p>","parent_name":"SDImageCacheType"},"Enums/SDImageCacheType.html#/c:@E@SDImageCacheType@SDImageCacheTypeDisk":{"name":"SDImageCacheTypeDisk","abstract":"<p>The image was obtained from the disk cache.</p>","parent_name":"SDImageCacheType"},"Enums/SDImageCacheType.html#/c:@E@SDImageCacheType@SDImageCacheTypeMemory":{"name":"SDImageCacheTypeMemory","abstract":"<p>The image was obtained from the memory cache.</p>","parent_name":"SDImageCacheType"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatUndefined":{"name":"SDImageFormatUndefined","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatJPEG":{"name":"SDImageFormatJPEG","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatPNG":{"name":"SDImageFormatPNG","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatGIF":{"name":"SDImageFormatGIF","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatTIFF":{"name":"SDImageFormatTIFF","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatWebP":{"name":"SDImageFormatWebP","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html#/c:@E@SDImageFormat@SDImageFormatHEIC":{"name":"SDImageFormatHEIC","abstract":"<p>Undocumented</p>","parent_name":"SDImageFormat"},"Enums/SDImageFormat.html":{"name":"SDImageFormat","abstract":"<p>Undocumented</p>"},"Enums/SDImageCacheType.html":{"name":"SDImageCacheType","abstract":"<p>Undocumented</p>"},"Enums/SDImageCacheOptions.html":{"name":"SDImageCacheOptions","abstract":"<p>Undocumented</p>"},"Enums/SDImageCacheConfigExpireType.html":{"name":"SDImageCacheConfigExpireType","abstract":"<p>Undocumented</p>"},"Enums/SDWebImageDownloaderOptions.html":{"name":"SDWebImageDownloaderOptions","abstract":"<p>Undocumented</p>"},"Enums/SDWebImageDownloaderExecutionOrder.html":{"name":"SDWebImageDownloaderExecutionOrder","abstract":"<p>Undocumented</p>"},"Enums/SDWebImageOptions.html":{"name":"SDWebImageOptions","abstract":"<p>Undocumented</p>"},"Enums/SDWebImageAnimationOptions.html":{"name":"SDWebImageAnimationOptions","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@SDWebImageCoderScaleDownLargeImagesKey":{"name":"SDWebImageCoderScaleDownLargeImagesKey","abstract":"<p>A Boolean value indicating whether to scale down large images during decompressing. (NSNumber)</p>"},"Constants.html#/c:@SDWebImageErrorDomain":{"name":"SDWebImageErrorDomain","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@SDWebImageDownloadStartNotification":{"name":"SDWebImageDownloadStartNotification","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@SDWebImageDownloadStopNotification":{"name":"SDWebImageDownloadStopNotification","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@SDWebImageDownloadReceiveResponseNotification":{"name":"SDWebImageDownloadReceiveResponseNotification","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@SDWebImageDownloadFinishNotification":{"name":"SDWebImageDownloadFinishNotification","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@SDWebImageInternalSetImageGroupKey":{"name":"SDWebImageInternalSetImageGroupKey","abstract":"<p>A Dispatch group to maintain setImageBlock and completionBlock. This key should be used only internally and may be changed in the future. (dispatch_group_t)</p>"},"Constants.html#/c:@SDWebImageExternalCustomManagerKey":{"name":"SDWebImageExternalCustomManagerKey","abstract":"<p>A SDWebImageManager instance to control the image download and cache process using in UIImageView+WebCache category and likes. If not provided, use the shared manager (SDWebImageManager)</p>"},"Constants.html#/c:@SDWebImageProgressUnitCountUnknown":{"name":"SDWebImageProgressUnitCountUnknown","abstract":"<p>The value specify that the image progress unit count cannot be determined because the progressBlock is not been called.</p>"},"Constants.html#/c:@WebImageVersionNumber":{"name":"WebImageVersionNumber","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@WebImageVersionString":{"name":"WebImageVersionString","abstract":"<p>Undocumented</p>"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)avoidAutoSetImage":{"name":"avoidAutoSetImage","abstract":"<p>By default, we set the image to the view at the beginning of the animtions. You can disable this and provide custom set image process</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)duration":{"name":"duration","abstract":"<p>The duration of the transition animation, measured in seconds. Defaults to 0.5.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)timingFunction":{"name":"timingFunction","abstract":"<p>The timing function used for all animations within this transition animation (macOS).</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)animationOptions":{"name":"animationOptions","abstract":"<p>A mask of options indicating how you want to perform the animations.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)prepares":{"name":"prepares","abstract":"<p>A block object to be executed before the animation sequence starts.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)animations":{"name":"animations","abstract":"<p>A block object that contains the changes you want to make to the specified view.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(py)completion":{"name":"completion","abstract":"<p>A block object to be executed when the animation sequence ends.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)fadeTransition":{"name":"fadeTransition","abstract":"<p>Fade transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)flipFromLeftTransition":{"name":"flipFromLeftTransition","abstract":"<p>Flip from left transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)flipFromRightTransition":{"name":"flipFromRightTransition","abstract":"<p>Flip from right transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)flipFromTopTransition":{"name":"flipFromTopTransition","abstract":"<p>Flip from top transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)flipFromBottomTransition":{"name":"flipFromBottomTransition","abstract":"<p>Flip from bottom transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)curlUpTransition":{"name":"curlUpTransition","abstract":"<p>Curl up transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImageTransition.html#/c:objc(cs)SDWebImageTransition(cpy)curlDownTransition":{"name":"curlDownTransition","abstract":"<p>Curl down transition.</p>","parent_name":"SDWebImageTransition"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(py)manager":{"name":"manager","abstract":"<p>The web image manager</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(py)maxConcurrentDownloads":{"name":"maxConcurrentDownloads","abstract":"<p>Maximum number of URLs to prefetch at the same time. Defaults to 3.</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(py)options":{"name":"options","abstract":"<p>SDWebImageOptions for prefetcher. Defaults to SDWebImageLowPriority.</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(py)prefetcherQueue":{"name":"prefetcherQueue","abstract":"<p>Queue options for Prefetcher. Defaults to Main Queue.</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(cm)sharedImagePrefetcher":{"name":"+sharedImagePrefetcher","abstract":"<p>Return the global image prefetcher instance.</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(im)initWithImageManager:":{"name":"-initWithImageManager:","abstract":"<p>Allows you to instantiate a prefetcher with any arbitrary image manager.</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(im)prefetchURLs:":{"name":"-prefetchURLs:","abstract":"<p>Assign list of URLs to let SDWebImagePrefetcher to queue the prefetching,","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(im)prefetchURLs:progress:completed:":{"name":"-prefetchURLs:progress:completed:","abstract":"<p>Assign list of URLs to let SDWebImagePrefetcher to queue the prefetching,","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImagePrefetcher.html#/c:objc(cs)SDWebImagePrefetcher(im)cancelPrefetching":{"name":"-cancelPrefetching","abstract":"<p>Remove and cancel queued list</p>","parent_name":"SDWebImagePrefetcher"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(py)delegate":{"name":"delegate","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(py)imageCache":{"name":"imageCache","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(py)imageDownloader":{"name":"imageDownloader","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(py)cacheKeyFilter":{"name":"cacheKeyFilter","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(py)cacheSerializer":{"name":"cacheSerializer","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(cm)sharedManager":{"name":"+sharedManager","abstract":"<p>Returns global SDWebImageManager instance.</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)initWithCache:downloader:":{"name":"-initWithCache:downloader:","abstract":"<p>Allows to specify instance of cache and image downloader used with image manager.</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)loadImageWithURL:options:progress:completed:":{"name":"-loadImageWithURL:options:progress:completed:","abstract":"<p>Downloads the image at the given URL if not present in cache or return the cached version otherwise.</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)saveImageToCache:forURL:":{"name":"-saveImageToCache:forURL:","abstract":"<p>Saves image to cache for given URL</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)cancelAll":{"name":"-cancelAll","abstract":"<p>Cancel all current operations</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)isRunning":{"name":"-isRunning","abstract":"<p>Check one or more operations running</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)cachedImageExistsForURL:completion:":{"name":"-cachedImageExistsForURL:completion:","abstract":"<p>Async check if image has already been cached</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)diskImageExistsForURL:completion:":{"name":"-diskImageExistsForURL:completion:","abstract":"<p>Async check if image has already been cached on disk only</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageManager.html#/c:objc(cs)SDWebImageManager(im)cacheKeyForURL:":{"name":"-cacheKeyForURL:","abstract":"<p>Return the cache key for a given URL</p>","parent_name":"SDWebImageManager"},"Classes/SDWebImageImageIOCoder.html#/c:objc(cs)SDWebImageImageIOCoder(cm)sharedCoder":{"name":"+sharedCoder","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageImageIOCoder"},"Classes/SDWebImageGIFCoder.html#/c:objc(cs)SDWebImageGIFCoder(cm)sharedCoder":{"name":"+sharedCoder","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageGIFCoder"},"Classes/SDWebImageFrame.html#/c:objc(cs)SDWebImageFrame(py)image":{"name":"image","abstract":"<p>The image of current frame. You should not set an animated image.</p>","parent_name":"SDWebImageFrame"},"Classes/SDWebImageFrame.html#/c:objc(cs)SDWebImageFrame(py)duration":{"name":"duration","abstract":"<p>The duration of current frame to be displayed. The number is seconds but not milliseconds. You should not set this to zero.</p>","parent_name":"SDWebImageFrame"},"Classes/SDWebImageFrame.html#/c:objc(cs)SDWebImageFrame(cm)frameWithImage:duration:":{"name":"+frameWithImage:duration:","abstract":"<p>Create a frame instance with specify image and duration</p>","parent_name":"SDWebImageFrame"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)request":{"name":"request","abstract":"<p>The request used by the operation&rsquo;s task.</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)dataTask":{"name":"dataTask","abstract":"<p>The operation&rsquo;s task</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)shouldDecompressImages":{"name":"shouldDecompressImages","abstract":"<p>Undocumented</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)shouldUseCredentialStorage":{"name":"shouldUseCredentialStorage","abstract":"<p>Was used to determine whether the URL connection should consult the credential storage for authenticating the connection.","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)credential":{"name":"credential","abstract":"<p>The credential used for authentication challenges in <code>-URLSession:task:didReceiveChallenge:completionHandler:</code>.</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)options":{"name":"options","abstract":"<p>The SDWebImageDownloaderOptions for the receiver.</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)expectedSize":{"name":"expectedSize","abstract":"<p>The expected size of data.</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(py)response":{"name":"response","abstract":"<p>The response returned by the operation&rsquo;s task.</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(im)initWithRequest:inSession:options:":{"name":"-initWithRequest:inSession:options:","abstract":"<p>Initializes a <code>SDWebImageDownloaderOperation</code> object</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(im)addHandlersForProgress:completed:":{"name":"-addHandlersForProgress:completed:","abstract":"<p>Adds handlers for progress and completion. Returns a tokent that can be passed to -cancel: to cancel this set of","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloaderOperation.html#/c:objc(cs)SDWebImageDownloaderOperation(im)cancel:":{"name":"-cancel:","abstract":"<p>Cancels a set of callbacks. Once all callbacks are canceled, the operation is cancelled.</p>","parent_name":"SDWebImageDownloaderOperation"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)shouldDecompressImages":{"name":"shouldDecompressImages","abstract":"<p>Decompressing images that are downloaded and cached can improve performance but can consume lot of memory.","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)maxConcurrentDownloads":{"name":"maxConcurrentDownloads","abstract":"<p>The maximum number of concurrent downloads</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)currentDownloadCount":{"name":"currentDownloadCount","abstract":"<p>Shows the current amount of downloads that still need to be downloaded</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)downloadTimeout":{"name":"downloadTimeout","abstract":"<p>The timeout value (in seconds) for the download operation. Default: 15.0.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)sessionConfiguration":{"name":"sessionConfiguration","abstract":"<p>The configuration in use by the internal NSURLSession.","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)executionOrder":{"name":"executionOrder","abstract":"<p>Changes download operations execution order. Default value is <code>SDWebImageDownloaderFIFOExecutionOrder</code>.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(cm)sharedDownloader":{"name":"+sharedDownloader","abstract":"<p>Singleton method, returns the shared instance</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)urlCredential":{"name":"urlCredential","abstract":"<p>Set the default URL credential to be set for request operations.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)username":{"name":"username","abstract":"<p>Set username</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)password":{"name":"password","abstract":"<p>Set password</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(py)headersFilter":{"name":"headersFilter","abstract":"<p>Set filter to pick headers for downloading image HTTP request.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)initWithSessionConfiguration:":{"name":"-initWithSessionConfiguration:","abstract":"<p>Creates an instance of a downloader with specified session configuration.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)setValue:forHTTPHeaderField:":{"name":"-setValue:forHTTPHeaderField:","abstract":"<p>Set a value for a HTTP header to be appended to each download HTTP request.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)valueForHTTPHeaderField:":{"name":"-valueForHTTPHeaderField:","abstract":"<p>Returns the value of the specified HTTP header field.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)setOperationClass:":{"name":"-setOperationClass:","abstract":"<p>Sets a subclass of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SDWebImageDownloaderOperation.html\">SDWebImageDownloaderOperation</a></code> as the default","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)downloadImageWithURL:options:progress:completed:":{"name":"-downloadImageWithURL:options:progress:completed:","abstract":"<p>Creates a SDWebImageDownloader async downloader instance with a given URL</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)cancel:":{"name":"-cancel:","abstract":"<p>Cancels a download that was previously queued using -downloadImageWithURL:options:progress:completed:</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)setSuspended:":{"name":"-setSuspended:","abstract":"<p>Sets the download queue suspension state</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)cancelAllDownloads":{"name":"-cancelAllDownloads","abstract":"<p>Cancels all download operations in the queue</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)createNewSessionWithConfiguration:":{"name":"-createNewSessionWithConfiguration:","abstract":"<p>Forces SDWebImageDownloader to create and use a new NSURLSession that is","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloader.html#/c:objc(cs)SDWebImageDownloader(im)invalidateSessionAndCancel:":{"name":"-invalidateSessionAndCancel:","abstract":"<p>Invalidates the managed session, optionally canceling pending operations.</p>","parent_name":"SDWebImageDownloader"},"Classes/SDWebImageDownloadToken.html#/c:objc(cs)SDWebImageDownloadToken(py)url":{"name":"url","abstract":"<p>The download&rsquo;s URL. This should be readonly and you should not modify</p>","parent_name":"SDWebImageDownloadToken"},"Classes/SDWebImageDownloadToken.html#/c:objc(cs)SDWebImageDownloadToken(py)downloadOperationCancelToken":{"name":"downloadOperationCancelToken","abstract":"<p>The cancel token taken from <code>addHandlersForProgress:completed</code>. This should be readonly and you should not modify</p>","parent_name":"SDWebImageDownloadToken"},"Classes/SDWebImageCodersManager.html#/c:objc(cs)SDWebImageCodersManager(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Shared reusable instance</p>","parent_name":"SDWebImageCodersManager"},"Classes/SDWebImageCodersManager.html#/c:objc(cs)SDWebImageCodersManager(py)coders":{"name":"coders","abstract":"<p>All coders in coders manager. The coders array is a priority queue, which means the later added coder will have the highest priority</p>","parent_name":"SDWebImageCodersManager"},"Classes/SDWebImageCodersManager.html#/c:objc(cs)SDWebImageCodersManager(im)addCoder:":{"name":"-addCoder:","abstract":"<p>Add a new coder to the end of coders array. Which has the highest priority.</p>","parent_name":"SDWebImageCodersManager"},"Classes/SDWebImageCodersManager.html#/c:objc(cs)SDWebImageCodersManager(im)removeCoder:":{"name":"-removeCoder:","abstract":"<p>Remove a coder in the coders array.</p>","parent_name":"SDWebImageCodersManager"},"Classes/SDWebImageCoderHelper.html#/c:objc(cs)SDWebImageCoderHelper(cm)animatedImageWithFrames:":{"name":"+animatedImageWithFrames:","abstract":"<p>Return an animated image with frames array.","parent_name":"SDWebImageCoderHelper"},"Classes/SDWebImageCoderHelper.html#/c:objc(cs)SDWebImageCoderHelper(cm)framesFromAnimatedImage:":{"name":"+framesFromAnimatedImage:","abstract":"<p>Return frames array from an animated image.","parent_name":"SDWebImageCoderHelper"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)shouldDecompressImages":{"name":"shouldDecompressImages","abstract":"<p>Decompressing images that are downloaded and cached can improve performance but can consume lot of memory.","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)shouldDisableiCloud":{"name":"shouldDisableiCloud","abstract":"<p>Whether or not to disable iCloud backup","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)shouldCacheImagesInMemory":{"name":"shouldCacheImagesInMemory","abstract":"<p>Whether or not to use memory cache</p>","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)shouldUseWeakMemoryCache":{"name":"shouldUseWeakMemoryCache","abstract":"<p>The option to control weak memory cache for images. When enable, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SDImageCache.html\">SDImageCache</a></code>&lsquo;s memory cache will use a weak maptable to store the image at the same time when it stored to memory, and get removed at the same time.","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)diskCacheReadingOptions":{"name":"diskCacheReadingOptions","abstract":"<p>The reading options while reading cache from disk.","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)diskCacheWritingOptions":{"name":"diskCacheWritingOptions","abstract":"<p>The writing options while writing cache to disk.","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)maxCacheAge":{"name":"maxCacheAge","abstract":"<p>The maximum length of time to keep an image in the cache, in seconds.</p>","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)maxCacheSize":{"name":"maxCacheSize","abstract":"<p>The maximum size of the cache, in bytes.</p>","parent_name":"SDImageCacheConfig"},"Classes/SDImageCacheConfig.html#/c:objc(cs)SDImageCacheConfig(py)diskCacheExpireType":{"name":"diskCacheExpireType","abstract":"<p>The attribute which the clear cache will be checked against when clearing the disk cache","parent_name":"SDImageCacheConfig"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(py)config":{"name":"config","abstract":"<p>Cache Config object - storing all kind of settings</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(py)maxMemoryCost":{"name":"maxMemoryCost","abstract":"<p>The maximum <q>total cost</q> of the in-memory image cache. The cost function is the number of pixels held in memory.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(py)maxMemoryCountLimit":{"name":"maxMemoryCountLimit","abstract":"<p>The maximum number of objects the cache should hold.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(cm)sharedImageCache":{"name":"+sharedImageCache","abstract":"<p>Returns global shared cache instance</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)initWithNamespace:":{"name":"-initWithNamespace:","abstract":"<p>Init a new cache store with a specific namespace</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)initWithNamespace:diskCacheDirectory:":{"name":"-initWithNamespace:diskCacheDirectory:","abstract":"<p>Init a new cache store with a specific namespace and directory</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)makeDiskCachePath:":{"name":"-makeDiskCachePath:","abstract":"<p>Undocumented</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)addReadOnlyCachePath:":{"name":"-addReadOnlyCachePath:","abstract":"<p>Add a read-only cache path to search for images pre-cached by SDImageCache","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)storeImage:forKey:completion:":{"name":"-storeImage:forKey:completion:","abstract":"<p>Asynchronously store an image into memory and disk cache at the given key.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)storeImage:forKey:toDisk:completion:":{"name":"-storeImage:forKey:toDisk:completion:","abstract":"<p>Asynchronously store an image into memory and disk cache at the given key.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)storeImage:imageData:forKey:toDisk:completion:":{"name":"-storeImage:imageData:forKey:toDisk:completion:","abstract":"<p>Asynchronously store an image into memory and disk cache at the given key.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)storeImageDataToDisk:forKey:":{"name":"-storeImageDataToDisk:forKey:","abstract":"<p>Synchronously store image NSData into disk cache at the given key.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)diskImageExistsWithKey:completion:":{"name":"-diskImageExistsWithKey:completion:","abstract":"<p>Async check if image exists in disk cache already (does not load the image)</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)diskImageDataExistsWithKey:":{"name":"-diskImageDataExistsWithKey:","abstract":"<p>Sync check if image data exists in disk cache already (does not load the image)</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)diskImageDataForKey:":{"name":"-diskImageDataForKey:","abstract":"<p>Query the image data for the given key synchronously.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)queryCacheOperationForKey:done:":{"name":"-queryCacheOperationForKey:done:","abstract":"<p>Operation that queries the cache asynchronously and call the completion when done.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)queryCacheOperationForKey:options:done:":{"name":"-queryCacheOperationForKey:options:done:","abstract":"<p>Operation that queries the cache asynchronously and call the completion when done.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)imageFromMemoryCacheForKey:":{"name":"-imageFromMemoryCacheForKey:","abstract":"<p>Query the memory cache synchronously.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)imageFromDiskCacheForKey:":{"name":"-imageFromDiskCacheForKey:","abstract":"<p>Query the disk cache synchronously.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)imageFromCacheForKey:":{"name":"-imageFromCacheForKey:","abstract":"<p>Query the cache (memory and or disk) synchronously after checking the memory cache.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)removeImageForKey:withCompletion:":{"name":"-removeImageForKey:withCompletion:","abstract":"<p>Remove the image from memory and disk cache asynchronously</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)removeImageForKey:fromDisk:withCompletion:":{"name":"-removeImageForKey:fromDisk:withCompletion:","abstract":"<p>Remove the image from memory and optionally disk cache asynchronously</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)clearMemory":{"name":"-clearMemory","abstract":"<p>Clear all memory cached images</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)clearDiskOnCompletion:":{"name":"-clearDiskOnCompletion:","abstract":"<p>Async clear all disk cached images. Non-blocking method - returns immediately.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)deleteOldFilesWithCompletionBlock:":{"name":"-deleteOldFilesWithCompletionBlock:","abstract":"<p>Async remove all expired cached image from disk. Non-blocking method - returns immediately.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)getSize":{"name":"-getSize","abstract":"<p>Get the size used by the disk cache</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)getDiskCount":{"name":"-getDiskCount","abstract":"<p>Get the number of images in the disk cache</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)calculateSizeWithCompletionBlock:":{"name":"-calculateSizeWithCompletionBlock:","abstract":"<p>Asynchronously calculate the disk cache&rsquo;s size.</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)cachePathForKey:inPath:":{"name":"-cachePathForKey:inPath:","abstract":"<p>Get the cache path for a certain key (needs the cache path root folder)</p>","parent_name":"SDImageCache"},"Classes/SDImageCache.html#/c:objc(cs)SDImageCache(im)defaultCachePathForKey:":{"name":"-defaultCachePathForKey:","abstract":"<p>Get the default cache path for a certain key</p>","parent_name":"SDImageCache"},"Classes.html#/c:objc(cs)SDAnimatedImageRep":{"name":"SDAnimatedImageRep","abstract":"<p>Undocumented</p>"},"Classes/SDImageCache.html":{"name":"SDImageCache","abstract":"<p>SDImageCache maintains a memory cache and an optional disk cache. Disk cache write operations are performed"},"Classes/SDImageCacheConfig.html":{"name":"SDImageCacheConfig","abstract":"<p>Undocumented</p>"},"Classes/SDWebImageCoderHelper.html":{"name":"SDWebImageCoderHelper","abstract":"<p>Undocumented</p>"},"Classes/SDWebImageCodersManager.html":{"name":"SDWebImageCodersManager","abstract":"<p>Global object holding the array of coders, so that we avoid passing them from object to object."},"Classes/SDWebImageDownloadToken.html":{"name":"SDWebImageDownloadToken","abstract":"<p>A token associated with each download. Can be used to cancel a download</p>"},"Classes/SDWebImageDownloader.html":{"name":"SDWebImageDownloader","abstract":"<p>Asynchronous downloader dedicated and optimized for image loading.</p>"},"Classes/SDWebImageDownloaderOperation.html":{"name":"SDWebImageDownloaderOperation","abstract":"<p>Undocumented</p>"},"Classes/SDWebImageFrame.html":{"name":"SDWebImageFrame","abstract":"<p>Undocumented</p>"},"Classes/SDWebImageGIFCoder.html":{"name":"SDWebImageGIFCoder","abstract":"<p>Built in coder using ImageIO that supports GIF encoding/decoding</p>"},"Classes/SDWebImageImageIOCoder.html":{"name":"SDWebImageImageIOCoder","abstract":"<p>Built in coder that supports PNG, JPEG, TIFF, includes support for progressive decoding.</p>"},"Classes/SDWebImageManager.html":{"name":"SDWebImageManager"},"Classes/SDWebImagePrefetcher.html":{"name":"SDWebImagePrefetcher","abstract":"<p>Prefetch some URLs in the cache for future use. Images are downloaded in low priority.</p>"},"Classes/SDWebImageTransition.html":{"name":"SDWebImageTransition","abstract":"<p>Undocumented</p>"},"Categories/NSView(WebCacheOperation).html#/c:objc(cs)NSView(im)sd_setImageLoadOperation:forKey:":{"name":"-sd_setImageLoadOperation:forKey:","abstract":"<p>Set the image load operation (storage in a UIView based weak map table)</p>","parent_name":"NSView(WebCacheOperation)"},"Categories/NSView(WebCacheOperation).html#/c:objc(cs)NSView(im)sd_cancelImageLoadOperationWithKey:":{"name":"-sd_cancelImageLoadOperationWithKey:","abstract":"<p>Cancel all operations for the current UIView and key</p>","parent_name":"NSView(WebCacheOperation)"},"Categories/NSView(WebCacheOperation).html#/c:objc(cs)NSView(im)sd_removeImageLoadOperationWithKey:":{"name":"-sd_removeImageLoadOperationWithKey:","abstract":"<p>Just remove the operations corresponding to the current UIView and key without cancelling them</p>","parent_name":"NSView(WebCacheOperation)"},"Categories/NSView(WebCache).html#/c:objc(cs)NSView(im)sd_imageURL":{"name":"-sd_imageURL","abstract":"<p>Get the current image URL.</p>","parent_name":"NSView(WebCache)"},"Categories/NSView(WebCache).html#/c:objc(cs)NSView(py)sd_imageProgress":{"name":"sd_imageProgress","abstract":"<p>The current image loading progress associated to the view. The unit count is the received size and excepted size of download.","parent_name":"NSView(WebCache)"},"Categories/NSView(WebCache).html#/c:objc(cs)NSView(im)sd_internalSetImageWithURL:placeholderImage:options:operationKey:setImageBlock:progress:completed:":{"name":"-sd_internalSetImageWithURL:placeholderImage:options:operationKey:setImageBlock:progress:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code> and optionally a placeholder image.</p>","parent_name":"NSView(WebCache)"},"Categories/NSView(WebCache).html#/c:objc(cs)NSView(im)sd_internalSetImageWithURL:placeholderImage:options:operationKey:setImageBlock:progress:completed:context:":{"name":"-sd_internalSetImageWithURL:placeholderImage:options:operationKey:setImageBlock:progress:completed:context:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code> and optionally a placeholder image.</p>","parent_name":"NSView(WebCache)"},"Categories/NSView(WebCache).html#/c:objc(cs)NSView(im)sd_cancelCurrentImageLoad":{"name":"-sd_cancelCurrentImageLoad","abstract":"<p>Cancel the current image load</p>","parent_name":"NSView(WebCache)"},"Categories/NSView(WebCache).html#/c:objc(cs)NSView(py)sd_imageTransition":{"name":"sd_imageTransition","abstract":"<p>The image transition when image load finished. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SDWebImageTransition.html\">SDWebImageTransition</a></code>.","parent_name":"NSView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:":{"name":"-sd_setImageWithURL:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:placeholderImage:":{"name":"-sd_setImageWithURL:placeholderImage:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code> and a placeholder.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:placeholderImage:options:":{"name":"-sd_setImageWithURL:placeholderImage:options:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:completed:":{"name":"-sd_setImageWithURL:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:placeholderImage:completed:":{"name":"-sd_setImageWithURL:placeholderImage:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:placeholderImage:options:completed:":{"name":"-sd_setImageWithURL:placeholderImage:options:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithURL:placeholderImage:options:progress:completed:":{"name":"-sd_setImageWithURL:placeholderImage:options:progress:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSImageView(WebCache)"},"Categories/NSImageView(WebCache).html#/c:objc(cs)NSImageView(im)sd_setImageWithPreviousCachedImageWithURL:placeholderImage:options:progress:completed:":{"name":"-sd_setImageWithPreviousCachedImageWithURL:placeholderImage:options:progress:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code> and custom options. The placeholder image is from previous cached image and will use the provided one instead if the query failed.","parent_name":"NSImageView(WebCache)"},"Categories/NSImage(MultiFormat).html#/c:objc(cs)NSImage(py)sd_imageLoopCount":{"name":"sd_imageLoopCount","abstract":"<p>UIKit:","parent_name":"NSImage(MultiFormat)"},"Categories/NSImage(MultiFormat).html#/c:objc(cs)NSImage(py)sd_imageFormat":{"name":"sd_imageFormat","abstract":"<p>The image format represent the original compressed image data format.","parent_name":"NSImage(MultiFormat)"},"Categories/NSImage(MultiFormat).html#/c:objc(cs)NSImage(cm)sd_imageWithData:":{"name":"+sd_imageWithData:","abstract":"<p>Undocumented</p>","parent_name":"NSImage(MultiFormat)"},"Categories/NSImage(MultiFormat).html#/c:objc(cs)NSImage(im)sd_imageData":{"name":"-sd_imageData","abstract":"<p>Undocumented</p>","parent_name":"NSImage(MultiFormat)"},"Categories/NSImage(MultiFormat).html#/c:objc(cs)NSImage(im)sd_imageDataAsFormat:":{"name":"-sd_imageDataAsFormat:","abstract":"<p>Undocumented</p>","parent_name":"NSImage(MultiFormat)"},"Categories/NSImage(GIF).html#/c:objc(cs)NSImage(cm)sd_animatedGIFWithData:":{"name":"+sd_animatedGIFWithData:","abstract":"<p>Creates an animated UIImage from an NSData.","parent_name":"NSImage(GIF)"},"Categories/NSImage(GIF).html#/c:objc(cs)NSImage(im)isGIF":{"name":"-isGIF","abstract":"<p>Checks if an UIImage instance is a GIF. Will use the <code>images</code> array.</p>","parent_name":"NSImage(GIF)"},"Categories/NSImage(ForceDecode).html#/c:objc(cs)NSImage(cm)decodedImageWithImage:":{"name":"+decodedImageWithImage:","abstract":"<p>Undocumented</p>","parent_name":"NSImage(ForceDecode)"},"Categories/NSImage(ForceDecode).html#/c:objc(cs)NSImage(cm)decodedAndScaledDownImageWithImage:":{"name":"+decodedAndScaledDownImageWithImage:","abstract":"<p>Undocumented</p>","parent_name":"NSImage(ForceDecode)"},"Categories/NSImage(WebCache).html#/c:objc(cs)NSImage(im)CGImage":{"name":"-CGImage","abstract":"<p>Undocumented</p>","parent_name":"NSImage(WebCache)"},"Categories/NSImage(WebCache).html#/c:objc(cs)NSImage(im)images":{"name":"-images","abstract":"<p>Undocumented</p>","parent_name":"NSImage(WebCache)"},"Categories/NSImage(WebCache).html#/c:objc(cs)NSImage(im)isGIF":{"name":"-isGIF","abstract":"<p>Undocumented</p>","parent_name":"NSImage(WebCache)"},"Categories/NSData(ImageContentType).html#/c:objc(cs)NSData(cm)sd_imageFormatForImageData:":{"name":"+sd_imageFormatForImageData:","abstract":"<p>Return image format</p>","parent_name":"NSData(ImageContentType)"},"Categories/NSData(ImageContentType).html#/c:objc(cs)NSData(cm)sd_UTTypeFromSDImageFormat:":{"name":"+sd_UTTypeFromSDImageFormat:","abstract":"<p>Convert SDImageFormat to UTType</p>","parent_name":"NSData(ImageContentType)"},"Categories/NSData(ImageContentType).html#/c:objc(cs)NSData(cm)sd_imageFormatFromUTType:":{"name":"+sd_imageFormatFromUTType:","abstract":"<p>Convert UTTyppe to SDImageFormat</p>","parent_name":"NSData(ImageContentType)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_currentImageURL":{"name":"-sd_currentImageURL","abstract":"<p>Get the current image URL.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:":{"name":"-sd_setImageWithURL:","abstract":"<p>Set the button <code>image</code> with an <code>url</code>.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:placeholderImage:":{"name":"-sd_setImageWithURL:placeholderImage:","abstract":"<p>Set the button <code>image</code> with an <code>url</code> and a placeholder.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:placeholderImage:options:":{"name":"-sd_setImageWithURL:placeholderImage:options:","abstract":"<p>Set the button <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:completed:":{"name":"-sd_setImageWithURL:completed:","abstract":"<p>Set the button <code>image</code> with an <code>url</code>.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:placeholderImage:completed:":{"name":"-sd_setImageWithURL:placeholderImage:completed:","abstract":"<p>Set the button <code>image</code> with an <code>url</code>, placeholder.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:placeholderImage:options:completed:":{"name":"-sd_setImageWithURL:placeholderImage:options:completed:","abstract":"<p>Set the button <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setImageWithURL:placeholderImage:options:progress:completed:":{"name":"-sd_setImageWithURL:placeholderImage:options:progress:completed:","abstract":"<p>Set the button <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_currentAlternateImageURL":{"name":"-sd_currentAlternateImageURL","abstract":"<p>Get the current alternateImage URL.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:":{"name":"-sd_setAlternateImageWithURL:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code>.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:placeholderImage:":{"name":"-sd_setAlternateImageWithURL:placeholderImage:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code> and a placeholder.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:placeholderImage:options:":{"name":"-sd_setAlternateImageWithURL:placeholderImage:options:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:completed:":{"name":"-sd_setAlternateImageWithURL:completed:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code>.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:placeholderImage:completed:":{"name":"-sd_setAlternateImageWithURL:placeholderImage:completed:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code>, placeholder.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:placeholderImage:options:completed:":{"name":"-sd_setAlternateImageWithURL:placeholderImage:options:completed:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_setAlternateImageWithURL:placeholderImage:options:progress:completed:":{"name":"-sd_setAlternateImageWithURL:placeholderImage:options:progress:completed:","abstract":"<p>Set the button <code>alternateImage</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_cancelCurrentImageLoad":{"name":"-sd_cancelCurrentImageLoad","abstract":"<p>Cancel the current image download</p>","parent_name":"NSButton(WebCache)"},"Categories/NSButton(WebCache).html#/c:objc(cs)NSButton(im)sd_cancelCurrentAlternateImageLoad":{"name":"-sd_cancelCurrentAlternateImageLoad","abstract":"<p>Cancel the current alternateImage download</p>","parent_name":"NSButton(WebCache)"},"Categories/MKAnnotationView(WebCache).html#/c:objc(cs)MKAnnotationView(im)sd_setImageWithURL:":{"name":"-sd_setImageWithURL:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>.</p>","parent_name":"MKAnnotationView(WebCache)"},"Categories/MKAnnotationView(WebCache).html#/c:objc(cs)MKAnnotationView(im)sd_setImageWithURL:placeholderImage:":{"name":"-sd_setImageWithURL:placeholderImage:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code> and a placeholder.</p>","parent_name":"MKAnnotationView(WebCache)"},"Categories/MKAnnotationView(WebCache).html#/c:objc(cs)MKAnnotationView(im)sd_setImageWithURL:placeholderImage:options:":{"name":"-sd_setImageWithURL:placeholderImage:options:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"MKAnnotationView(WebCache)"},"Categories/MKAnnotationView(WebCache).html#/c:objc(cs)MKAnnotationView(im)sd_setImageWithURL:completed:":{"name":"-sd_setImageWithURL:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>.</p>","parent_name":"MKAnnotationView(WebCache)"},"Categories/MKAnnotationView(WebCache).html#/c:objc(cs)MKAnnotationView(im)sd_setImageWithURL:placeholderImage:completed:":{"name":"-sd_setImageWithURL:placeholderImage:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder.</p>","parent_name":"MKAnnotationView(WebCache)"},"Categories/MKAnnotationView(WebCache).html#/c:objc(cs)MKAnnotationView(im)sd_setImageWithURL:placeholderImage:options:completed:":{"name":"-sd_setImageWithURL:placeholderImage:options:completed:","abstract":"<p>Set the imageView <code>image</code> with an <code>url</code>, placeholder and custom options.</p>","parent_name":"MKAnnotationView(WebCache)"},"Categories/MKAnnotationView(WebCache).html":{"name":"MKAnnotationView(WebCache)","abstract":"<p>Integrates SDWebImage async downloading and caching of remote images with MKAnnotationView.</p>"},"Categories/NSButton(WebCache).html":{"name":"NSButton(WebCache)","abstract":"<p>Undocumented</p>"},"Categories/NSData(ImageContentType).html":{"name":"NSData(ImageContentType)","abstract":"<p>Undocumented</p>"},"Categories/NSImage(WebCache).html":{"name":"NSImage(WebCache)","abstract":"<p>Undocumented</p>"},"Categories/NSImage(ForceDecode).html":{"name":"NSImage(ForceDecode)","abstract":"<p>Undocumented</p>"},"Categories/NSImage(GIF).html":{"name":"NSImage(GIF)","abstract":"<p>Undocumented</p>"},"Categories/NSImage(MultiFormat).html":{"name":"NSImage(MultiFormat)","abstract":"<p>Undocumented</p>"},"Categories/NSImageView(WebCache).html":{"name":"NSImageView(WebCache)"},"Categories/NSView(WebCache).html":{"name":"NSView(WebCache)","abstract":"<p>Undocumented</p>"},"Categories/NSView(WebCacheOperation).html":{"name":"NSView(WebCacheOperation)","abstract":"<p>Undocumented</p>"},"howtouse.html":{"name":"HowToUse"},"sdwebimage-40-migration-guide.html":{"name":"SDWebImage-4.0-Migration-guide"},"manualinstallation.html":{"name":"ManualInstallation"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Categories.html":{"name":"Categories","abstract":"<p>The following categories are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}